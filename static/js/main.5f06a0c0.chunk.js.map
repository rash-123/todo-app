{"version":3,"sources":["TodoItem.js","todosData.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","pervState","updatedTodos","map","todo","console","log","todoItems","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAmBeA,MAjBf,SAAkBC,GAMd,OACI,sBAAKC,UAAU,YAAf,UACI,uBAAOC,KAAK,WACZC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAE9C,mBAAGC,MAAOT,EAAMI,KAAKC,UAXN,CACnBK,UAAW,SACXC,MAAO,OACPC,eAAgB,gBAQqC,KAAjD,SAAwDZ,EAAMI,KAAKS,WCgBhEC,EA5BG,CACd,CACIN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,WACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mCACNR,WAAW,ICuBJU,E,kDA3CX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,MAAOH,GAEX,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBALV,E,gDAQd,SAAaV,GACVW,KAAKC,UAAS,SAAAC,GACV,IAAMC,EAAeD,EAAUJ,MAAMM,KAAI,SAAAC,GACrC,OAAGA,EAAKhB,KAAOA,EACJ,2BACAgB,GADP,IAEInB,WAAYmB,EAAKnB,YAGlBmB,KAKX,OAFAC,QAAQC,IAAIL,EAAUJ,OACtBQ,QAAQC,IAAIJ,GACL,CACNL,MAAOK,Q,oBAMf,WAAU,IAAD,OACCK,EAAYR,KAAKH,MAAMC,MAAMM,KAAI,SAAAnB,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,EAC7EG,aAAc,EAAKA,cAD2CH,EAAKI,OAElE,OACD,qBAAKP,UAAU,YAAf,SACK0B,Q,GAnCKC,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.5f06a0c0.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"grey\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input type=\"checkbox\" \r\n            checked={props.item.completed}\r\n            onChange={() => props.handleChange(props.item.id)}\r\n            />\r\n            <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n\r\n\r\n","import TodoItem from \"./TodoItem\"\r\n\r\nconst todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React from \"react\"\r\nimport Style from \"./style.css\"\r\nimport TodoItem from \"./TodoItem\"\r\nimport todosData from \"./todosData\"\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            todos: todosData\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(id){\r\n       this.setState(pervState => {\r\n           const updatedTodos = pervState.todos.map(todo =>{\r\n               if(todo.id === id){\r\n                   return {\r\n                       ...todo,\r\n                       completed: !todo.completed\r\n                   }\r\n               }\r\n               return todo\r\n\r\n           })\r\n           console.log(pervState.todos)\r\n           console.log(updatedTodos)\r\n           return {\r\n            todos: updatedTodos\r\n        }\r\n         \r\n       })\r\n     \r\n    }\r\n    render() {\r\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\r\n        handleChange={this.handleChange}/>)\r\n         return (\r\n        <div className=\"todo-list\">\r\n            {todoItems}\r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"))"],"sourceRoot":""}